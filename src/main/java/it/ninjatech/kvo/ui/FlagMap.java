package it.ninjatech.kvo.ui;

import java.awt.image.BufferedImage;
import java.util.HashMap;
import java.util.Map;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

public final class FlagMap {

	private enum FlagCoord {
		
		AD("ad", 32, 4),
		AE("ae", 64, 4),
		AF("af", 96, 4),
		AG("ag", 128, 4),
		AI("ai", 160, 4),
		AL("al", 192, 4),
		AM("am", 224, 4),
		AN("an", 256, 4),
		AO("ao", 288, 4),
		AR("ar", 320, 4),
		AS("as", 352, 4),
		AT("at", 384, 4),
		AU("au", 416, 4),
		AW("aw", 448, 4),
		AZ("az", 0, 36),
		BA("ba", 32, 36),
		BB("bb", 64, 36),
		BD("bd", 96, 36),
		BE("be", 128, 36),
		BF("bf", 160, 36),
		BG("bg", 192, 36),
		BH("bh", 224, 36),
		BI("bi", 256, 36),
		BJ("bj", 288, 36),
		BM("bm", 320, 36),
		BN("bn", 352, 36),
		BO("bo", 384, 36),
		BR("br", 416, 36),
		BS("bs", 448, 36),
		BT("bt", 0, 68),
		BW("bw", 32, 68),
		BY("by", 64, 68),
		BZ("bz", 96, 68),
		CA("ca", 128, 68),
		CD("cd", 160, 68),
		CF("cf", 192, 68),
		CG("cg", 224, 68),
		CH("ch", 256, 68),
		CI("ci", 288, 68),
		CK("ck", 320, 68),
		CL("cl", 352, 68),
		CM("cm", 384, 68),
		CN("cn", 416, 68),
		CO("co", 448, 68),
		CR("cr", 0, 100),
		CU("cu", 32, 100),
		CV("cv", 64, 100),
		CY("cy", 96, 100),
		CZ("cz", 128, 100),
		DE("de", 160, 100),
		DJ("dj", 192, 100),
		DK("dk", 224, 100),
		DM("dm", 256, 100),
		DO("do", 288, 100),
		DZ("dz", 320, 100),
		EC("ec", 352, 100),
		EE("ee", 384, 100),
		EG("eg", 416, 100),
		EH("eh", 448, 100),
		ER("er", 0, 132),
		ES("es", 32, 132),
		ET("et", 64, 132),
		FI("fi", 96, 132),
		FJ("fj", 128, 132),
		FM("fm", 160, 132),
		FO("fo", 192, 132),
		FR("fr", 224, 132),
		GA("ga", 256, 132),
		GB("gb", 288, 132),
		GD("gd", 320, 132),
		GE("ge", 352, 132),
		GG("gg", 384, 132),
		GH("gh", 416, 132),
		GI("gi", 448, 132),
		GL("gl", 0, 164),
		GM("gm", 32, 164),
		GN("gn", 64, 164),
		GP("gp", 96, 164),
		GQ("gq", 128, 164),
		GR("gr", 160, 164),
		GT("gt", 192, 164),
		GU("gu", 224, 164),
		GW("gw", 256, 164),
		GY("gy", 288, 164),
		HK("hk", 320, 164),
		HN("hn", 352, 164),
		HR("hr", 384, 164),
		HT("ht", 416, 164),
		HU("hu", 448, 164),
		ID("id", 0, 196),
		IE("ie", 32, 196),
		IL("il", 64, 196),
		IM("im", 96, 196),
		IN("in", 128, 196),
		IQ("iq", 160, 196),
		IR("ir", 192, 196),
		IS("is", 224, 196),
		IT("it", 256, 196),
		JE("je", 288, 196),
		JM("jm", 320, 196),
		JO("jo", 352, 196),
		JP("jp", 384, 196),
		KE("ke", 416, 196),
		KG("kg", 448, 196),
		KH("kh", 0, 228),
		KI("ki", 32, 228),
		KM("km", 64, 228),
		KN("kn", 96, 228),
		KP("kp", 128, 228),
		KR("kr", 160, 228),
		KW("kw", 192, 228),
		KY("ky", 224, 228),
		KZ("kz", 256, 228),
		LA("la", 288, 228),
		LB("lb", 320, 228),
		LC("lc", 352, 228),
		LI("li", 384, 228),
		LK("lk", 416, 228),
		LR("lr", 448, 228),
		LS("ls", 0, 260),
		LT("lt", 32, 260),
		LU("lu", 64, 260),
		LV("lv", 96, 260),
		LY("ly", 128, 260),
		MA("ma", 160, 260),
		MC("mc", 192, 260),
		MD("md", 224, 260),
		ME("me", 256, 260),
		MG("mg", 288, 260),
		MH("mh", 320, 260),
		MK("mk", 352, 260),
		ML("ml", 384, 260),
		MM("mm", 416, 260),
		MN("mn", 448, 260),
		MO("mo", 0, 292),
		MQ("mq", 32, 292),
		MR("mr", 64, 292),
		MS("ms", 96, 292),
		MT("mt", 128, 292),
		MU("mu", 160, 292),
		MV("mv", 192, 292),
		MW("mw", 224, 292),
		MX("mx", 256, 292),
		MY("my", 288, 292),
		MZ("mz", 320, 292),
		NA("na", 352, 292),
		NC("nc", 384, 292),
		NE("ne", 416, 292),
		NG("ng", 448, 292),
		NI("ni", 0, 324),
		NL("nl", 32, 324),
		NO("no", 64, 324),
		NP("np", 96, 324),
		NR("nr", 128, 324),
		NZ("nz", 160, 324),
		OM("om", 192, 324),
		PA("pa", 224, 324),
		PE("pe", 256, 324),
		PF("pf", 288, 324),
		PG("pg", 320, 324),
		PH("ph", 352, 324),
		PK("pk", 384, 324),
		PL("pl", 416, 324),
		PR("pr", 448, 324),
		PS("ps", 0, 356),
		PT("pt", 32, 356),
		PW("pw", 64, 356),
		PY("py", 96, 356),
		QA("qa", 128, 356),
		RE("re", 160, 356),
		RO("ro", 192, 356),
		RS("rs", 224, 356),
		RU("ru", 256, 356),
		RW("rw", 288, 356),
		SA("sa", 320, 356),
		SB("sb", 352, 356),
		SC("sc", 384, 356),
		SD("sd", 416, 356),
		SE("se", 448, 356),
		SG("sg", 0, 388),
		SI("si", 32, 388),
		SK("sk", 64, 388),
		SL("sl", 96, 388),
		SM("sm", 128, 388),
		SN("sn", 160, 388),
		SO("so", 192, 388),
		SR("sr", 224, 388),
		ST("st", 256, 388),
		SV("sv", 288, 388),
		SY("sy", 320, 388),
		SZ("sz", 352, 388),
		TC("tc", 384, 388),
		TD("td", 416, 388),
		TG("tg", 448, 388),
		TH("th", 0, 420),
		TJ("tj", 32, 420),
		TL("tl", 64, 420),
		TM("tm", 96, 420),
		TN("tn", 128, 420),
		TO("to", 160, 420),
		TR("tr", 192, 420),
		TT("tt", 224, 420),
		TV("tv", 256, 420),
		TW("tw", 288, 420),
		TZ("tz", 320, 420),
		UA("ua", 352, 420),
		UG("ug", 384, 420),
		US("us", 416, 420),
		UV("uv", 448, 420),
		UZ("uz", 0, 452),
		VA("va", 32, 452),
		VC("vc", 64, 452),
		VE("ve", 96, 452),
		VG("vg", 128, 452),
		VI("vi", 160, 452),
		VN("vn", 192, 452),
		VU("vu", 224, 452),
		WS("ws", 256, 452),
		YE("ye", 288, 452),
		ZA("za", 320, 452),
		ZM("zm", 352, 452),
		ZW("zw", 384, 452);
		
		private final String country;
		private final int x;
		private final int y;
		
		private FlagCoord(String country, int x, int y) {
			this.country = country;
			this.x = x;
			this.y = y;
		}
		
	}
	
	private static Map<String, ImageIcon> map;
	
	public static void init() throws Exception {
		if (map == null) {
    		map = new HashMap<>();
    		
    		BufferedImage flags = ImageIO.read(FlagMap.class.getResource("/images/flags.png"));
    		
    		for (FlagCoord flagCoord : FlagCoord.values()) {
    			map.put(flagCoord.country, new ImageIcon(flags.getSubimage(flagCoord.x, flagCoord.y, 32, 24)));
    		}
		}
	}
	
	public static ImageIcon getFlag(String country) {
		return map.get(country.toLowerCase());
	}
	
	private FlagMap() {}
	
}
