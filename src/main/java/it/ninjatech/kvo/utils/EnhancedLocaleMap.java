package it.ninjatech.kvo.utils;

import it.ninjatech.kvo.model.EnhancedLocale;

import java.awt.image.BufferedImage;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Map;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

public final class EnhancedLocaleMap {

	private enum FlagCoord {

		AD(32, 4),
		AE(64, 4),
		AF(96, 4),
		AG(128, 4),
		AI(160, 4),
		AL(192, 4),
		AM(224, 4),
		AN(256, 4),
		AO(288, 4),
		AR(320, 4),
		AS(352, 4),
		AT(384, 4),
		AU(416, 4),
		AW(448, 4),
		AZ(0, 36),
		BA(32, 36),
		BB(64, 36),
		BD(96, 36),
		BE(128, 36),
		BF(160, 36),
		BG(192, 36),
		BH(224, 36),
		BI(256, 36),
		BJ(288, 36),
		BM(320, 36),
		BN(352, 36),
		BO(384, 36),
		BR(416, 36),
		BS(448, 36),
		BT(0, 68),
		BW(32, 68),
		BY(64, 68),
		BZ(96, 68),
		CA(128, 68),
		CD(160, 68),
		CF(192, 68),
		CG(224, 68),
		CH(256, 68),
		CI(288, 68),
		CK(320, 68),
		CL(352, 68),
		CM(384, 68),
		CN(416, 68),
		CO(448, 68),
		CR(0, 100),
		CU(32, 100),
		CV(64, 100),
		CY(96, 100),
		CZ(128, 100),
		DE(160, 100),
		DJ(192, 100),
		DK(224, 100),
		DM(256, 100),
		DO(288, 100),
		DZ(320, 100),
		EC(352, 100),
		EE(384, 100),
		EG(416, 100),
		EH(448, 100),
		ER(0, 132),
		ES(32, 132),
		ET(64, 132),
		FI(96, 132),
		FJ(128, 132),
		FM(160, 132),
		FO(192, 132),
		FR(224, 132),
		GA(256, 132),
		GB(288, 132),
		GD(320, 132),
		GE(352, 132),
		GG(384, 132),
		GH(416, 132),
		GI(448, 132),
		GL(0, 164),
		GM(32, 164),
		GN(64, 164),
		GP(96, 164),
		GQ(128, 164),
		GR(160, 164),
		GT(192, 164),
		GU(224, 164),
		GW(256, 164),
		GY(288, 164),
		HK(320, 164),
		HN(352, 164),
		HR(384, 164),
		HT(416, 164),
		HU(448, 164),
		ID(0, 196),
		IE(32, 196),
		IL(64, 196),
		IM(96, 196),
		IN(128, 196),
		IQ(160, 196),
		IR(192, 196),
		IS(224, 196),
		IT(256, 196),
		JE(288, 196),
		JM(320, 196),
		JO(352, 196),
		JP(384, 196),
		KE(416, 196),
		KG(448, 196),
		KH(0, 228),
		KI(32, 228),
		KM(64, 228),
		KN(96, 228),
		KP(128, 228),
		KR(160, 228),
		KW(192, 228),
		KY(224, 228),
		KZ(256, 228),
		LA(288, 228),
		LB(320, 228),
		LC(352, 228),
		LI(384, 228),
		LK(416, 228),
		LR(448, 228),
		LS(0, 260),
		LT(32, 260),
		LU(64, 260),
		LV(96, 260),
		LY(128, 260),
		MA(160, 260),
		MC(192, 260),
		MD(224, 260),
		ME(256, 260),
		MG(288, 260),
		MH(320, 260),
		MK(352, 260),
		ML(384, 260),
		MM(416, 260),
		MN(448, 260),
		MO(0, 292),
		MQ(32, 292),
		MR(64, 292),
		MS(96, 292),
		MT(128, 292),
		MU(160, 292),
		MV(192, 292),
		MW(224, 292),
		MX(256, 292),
		MY(288, 292),
		MZ(320, 292),
		NA(352, 292),
		NC(384, 292),
		NE(416, 292),
		NG(448, 292),
		NI(0, 324),
		NL(32, 324),
		NO(64, 324),
		NP(96, 324),
		NR(128, 324),
		NZ(160, 324),
		OM(192, 324),
		PA(224, 324),
		PE(256, 324),
		PF(288, 324),
		PG(320, 324),
		PH(352, 324),
		PK(384, 324),
		PL(416, 324),
		PR(448, 324),
		PS(0, 356),
		PT(32, 356),
		PW(64, 356),
		PY(96, 356),
		QA(128, 356),
		RE(160, 356),
		RO(192, 356),
		RS(224, 356),
		RU(256, 356),
		RW(288, 356),
		SA(320, 356),
		SB(352, 356),
		SC(384, 356),
		SD(416, 356),
		SE(448, 356),
		SG(0, 388),
		SI(32, 388),
		SK(64, 388),
		SL(96, 388),
		SM(128, 388),
		SN(160, 388),
		SO(192, 388),
		SR(224, 388),
		ST(256, 388),
		SV(288, 388),
		SY(320, 388),
		SZ(352, 388),
		TC(384, 388),
		TD(416, 388),
		TG(448, 388),
		TH(0, 420),
		TJ(32, 420),
		TL(64, 420),
		TM(96, 420),
		TN(128, 420),
		TO(160, 420),
		TR(192, 420),
		TT(224, 420),
		TV(256, 420),
		TW(288, 420),
		TZ(320, 420),
		UA(352, 420),
		UG(384, 420),
		US(416, 420),
		UY(448, 420),
		UZ(0, 452),
		VA(32, 452),
		VC(64, 452),
		VE(96, 452),
		VG(128, 452),
		VI(160, 452),
		VN(192, 452),
		VU(224, 452),
		WS(256, 452),
		YE(288, 452),
		ZA(320, 452),
		ZM(352, 452),
		ZW(384, 452);

		private final int x;
		private final int y;

		private FlagCoord(int x, int y) {
			this.x = x;
			this.y = y;
		}

	}

	private enum LanguageCountryData {

		AD("ad", "Andorra", FlagCoord.AD, "ca", "Catalan", FlagCoord.AD),
		AE("ae", "United Arab Emirates", FlagCoord.AE, "ar", "Arabic", FlagCoord.AE),
		AF("af", "Afghanistan", FlagCoord.AF, "fa", "Farsi", FlagCoord.AF),
		AG("ag", "Antigua and Barbuda", FlagCoord.AG, null/* "en" */, null, null),
		AI("ai", "Anguilla", FlagCoord.AI, null/* "en" */, null, null),
		AL("al", "Albania", FlagCoord.AL, "sq", "Albanian", FlagCoord.AL),
		AM("am", "Armenia", FlagCoord.AM, "hy", "Armenian", FlagCoord.AM),
		AN("an", "Netherlands Antilles", FlagCoord.AN, null/* "nl" */, null, null),
		AO("ao", "Angola", FlagCoord.AO, null/* "pt" */, null, null),
		AR("ar", "Argentina", FlagCoord.AR, null/* "es" */, null, null),
		AS("as", "American Samoa", FlagCoord.AS, null/* "en" */, null, null),
		AT("at", "Austria", FlagCoord.AT, null/* "de" */, null, null),
		AU("au", "Australia", FlagCoord.AU, null/* "en" */, null, null),
		AW("aw", "Aruba", FlagCoord.AW, null/* "nl" */, null, null),
		AZ("az", "Azerbaijan", FlagCoord.AZ, "az", null, FlagCoord.AZ),
		BA("ba", "Bosnia and Herzegovina", FlagCoord.BA, "bs", "Bosnian", FlagCoord.BA),
		BB("bb", "Barbados", FlagCoord.BB, null/* "en" */, null, null),
		BD("bd", "Bangladesh", FlagCoord.BD, "bn", "Bengali, Bangla", FlagCoord.BD),
		BE("be", "Belgium", FlagCoord.BE, null/* "nl" */, null, null),
		BF("bf", "Burkina Faso", FlagCoord.BF, null/* "fr" */, null, null),
		BG("bg", "Bulgaria", FlagCoord.BG, "bg", "Bulgarian", FlagCoord.BG),
		BH("bh", "Bahrain", FlagCoord.BH, null/* "ar" */, null, null),
		BI("bi", "Burundi", FlagCoord.BI, null/* "fr" */, null, null),
		BJ("bj", "Benin", FlagCoord.BJ, null/* "fr" */, null, null),
		BM("bm", "Bermuda", FlagCoord.BM, null/* "en" */, null, null),
		BN("bn", "Brunei Darussalam", FlagCoord.BN, null/* "ms" */, null, null),
		BO("bo", "Bolivia (Plurinational State of)", FlagCoord.BO, null/* "es" */, null, null),
		BR("br", "Brazil", FlagCoord.BR, null/* "pt" */, null, null),
		BS("bs", "Bahamas", FlagCoord.BS, null/* "en" */, null, null),
		BT("bt", "Bhutan", FlagCoord.BT, "dz", "Dzongkha", FlagCoord.BT),
		BW("bw", "Botswana", FlagCoord.BW, null/* "en" */, null, null),
		BY("by", "Belarus", FlagCoord.BY, "be", "Belarusian", FlagCoord.BY),
		BZ("bz", "Belize", FlagCoord.BZ, null/* "en" */, null, null),
		CA("ca", "Canada", FlagCoord.CA, null/* "en" */, null, null),
		CD("cd", "Congo (Democratic Republic of the)", FlagCoord.CD, null/* "fr" */, null, null),
		CF("cf", "Central African Republic", FlagCoord.CF, null/* "fr" */, null, null),
		CG("cg", "Congo", FlagCoord.CG, null/* "fr" */, null, null),
		CH("ch", "Switzerland", FlagCoord.CH, null/* "de" */, null, null),
		CI("ci", "CÃ´te d'Ivoire", FlagCoord.CI, null/* "fr" */, null, null),
		CK("ck", "Cook Islands", FlagCoord.CK, null/* "en" */, null, null),
		CL("cl", "Chile", FlagCoord.CL, null/* "es" */, null, null),
		CM("cm", "Cameroon", FlagCoord.CM, null/* "en" */, null, null),
		CN("cn", "China", FlagCoord.CN, "zh", "Chinese", FlagCoord.CN),
		CO("co", "Colombia", FlagCoord.CO, null/* "es" */, null, null),
		CR("cr", "Costa Rica", FlagCoord.CR, null/* "es" */, null, null),
		CU("cu", "Cuba", FlagCoord.CU, null/* "es" */, null, null),
		CV("cv", "Cabo Verde", FlagCoord.CV, null/* "pt" */, null, null),
		CY("cy", "Cyprus", FlagCoord.CY, null/* "el" */, null, null),
		CZ("cz", "Czech Republic", FlagCoord.CZ, "cs", "Czech", FlagCoord.CZ),
		DE("de", "Germany", FlagCoord.DE, "de", "German", FlagCoord.DE),
		DJ("dj", "Djibouti", FlagCoord.DJ, null/* "fr" */, null, null),
		DK("dk", "Denmark", FlagCoord.DK, "da", "Danish", FlagCoord.DK),
		DM("dm", "Dominica", FlagCoord.DM, null/* "en" */, null, null),
		DO("do", "Dominican Republic", FlagCoord.DO, null/* "es" */, null, null),
		DZ("dz", "Algeria", FlagCoord.DZ, null/* "ar" */, null, null),
		EC("ec", "Ecuador", FlagCoord.EC, null/* "es" */, null, null),
		EE("ee", "Estonia", FlagCoord.EE, "et", "Estonian", FlagCoord.EE),
		EG("eg", "Egypt", FlagCoord.EG, null/* "ar" */, null, null),
		EH("eh", "Western Sahara", FlagCoord.EH, null/* "ar" */, null, null),
		ER("er", "Eritrea", FlagCoord.ER, "aa", "Afar", FlagCoord.ER),
		ES("es", "Spain", FlagCoord.ES, "es", "Spanish", FlagCoord.ES),
		ET("et", "Ethiopia", FlagCoord.ET, "am", "Amharic", FlagCoord.ET),
		FI("fi", "Finland", FlagCoord.FI, "fi", "Finnish", FlagCoord.FI),
		FJ("fj", "Fiji", FlagCoord.FJ, null/* "en" */, null, null),
		FM("fm", "Micronesia (Federated States of)", FlagCoord.FM, null/* "en" */, null, null),
		FO("fo", "Faroe Islands", FlagCoord.FO, "fo", "Faroese", FlagCoord.FO),
		FR("fr", "France", FlagCoord.FR, "fr", "French", FlagCoord.FR),
		GA("ga", "Gabon", FlagCoord.GA, null/* "fr" */, null, null),
		GB("gb", "United Kingdom of Great Britain and Northern Ireland", FlagCoord.GB, "en", "English", FlagCoord.GB),
		GD("gd", "Grenada", FlagCoord.GD, null/* "en" */, null, null),
		GE("ge", "Georgia", FlagCoord.GE, "ka", "Georgian", FlagCoord.GE),
		GG("gg", "Guernsey", FlagCoord.GG, null/* "en" */, null, null),
		GH("gh", "Ghana", FlagCoord.GH, null/* "en" */, null, null),
		GI("gi", "Gibraltar", FlagCoord.GI, null/* "en" */, null, null),
		GL("gl", "Greenland", FlagCoord.GL, "kl", "Kalaallisut, Greenlandic", FlagCoord.GL),
		GM("gm", "Gambia", FlagCoord.GM, null/* "en" */, null, null),
		GN("gn", "Guinea", FlagCoord.GN, null/* "fr" */, null, null),
		GP("gp", "Guadeloupe", FlagCoord.GP, null/* "fr" */, null, null),
		GQ("gq", "Equatorial Guinea", FlagCoord.GQ, null/* "es" */, null, null),
		GR("gr", "Greece", FlagCoord.GR, "el", "Greek (modern)", FlagCoord.GR),
		GT("gt", "Guatemala", FlagCoord.GT, null/* "es" */, null, null),
		GU("gu", "Guam", FlagCoord.GU, null/* "en" */, null, null),
		GW("gw", "Guinea-Bissau", FlagCoord.GW, null/* "pt" */, null, null),
		GY("gy", "Guyana", FlagCoord.GY, null/* "en" */, null, null),
		HK("hk", "Hong Kong", FlagCoord.HK, null/* "zh" */, null, null),
		HN("hn", "Honduras", FlagCoord.HN, null/* "es" */, null, null),
		HR("hr", "Croatia", FlagCoord.HR, "hr", "Croatian", FlagCoord.HR),
		HT("ht", "Haiti", FlagCoord.HT, "ht", "Haitian, Haitian Creole", FlagCoord.HT),
		HU("hu", "Hungary", FlagCoord.HU, "hu", "Hungarian", FlagCoord.HU),
		ID("id", "Indonesia", FlagCoord.ID, "id", "Indonesian", FlagCoord.ID),
		IE("ie", "Ireland", FlagCoord.IE, null/* "en" */, null, null),
		IL("il", "Israel", FlagCoord.IL, "he", "Hebrew (modern)", FlagCoord.IL),
		IM("im", "Isle of Man", FlagCoord.IM, null/* "en" */, null, null),
		IN("in", "India", FlagCoord.IN, null/* "en" */, null, null),
		IQ("iq", "Iraq", FlagCoord.IQ, null/* "ar" */, null, null),
		IR("ir", "Iran (Islamic Republic of)", FlagCoord.IR, null/* "fa" */, null, null),
		IS("is", "Iceland", FlagCoord.IS, "is", "Icelandic", FlagCoord.IS),
		IT("it", "Italy", FlagCoord.IT, "it", "Italian", FlagCoord.IT),
		JE("je", "Jersey", FlagCoord.JE, null/* "en" */, null, null),
		JM("jm", "Jamaica", FlagCoord.JM, null/* "en" */, null, null),
		JO("jo", "Jordan", FlagCoord.JO, null/* "ar" */, null, null),
		JP("jp", "Japan", FlagCoord.JP, "ja", "Japanese", FlagCoord.JP),
		KE("ke", "Kenya", FlagCoord.KE, null/* "en" */, null, null),
		KG("kg", "Kyrgyzstan", FlagCoord.KG, "ky", "Kyrgyz", FlagCoord.KG),
		KH("kh", "Cambodia", FlagCoord.KH, "km", "Khmer", FlagCoord.KH),
		KI("ki", "Kiribati", FlagCoord.KI, null/* "en" */, null, null),
		KM("km", "Comoros", FlagCoord.KM, null/* "ar" */, null, null),
		KN("kn", "Saint Kitts and Nevis", FlagCoord.KN, null/* "en" */, null, null),
		KP("kp", "Korea (Democratic People's Republic of)", FlagCoord.KP, null/* "ko" */, null, null),
		KR("kr", "Korea (Republic of)", FlagCoord.KR, "ko", "Korean", FlagCoord.KR),
		KW("kw", "Kuwait", FlagCoord.KW, null/* "ar" */, null, null),
		KY("ky", "Cayman Islands", FlagCoord.KY, null/* "en" */, null, null),
		KZ("kz", "Kazakhstan", FlagCoord.KZ, "kk", "Kazakh", FlagCoord.KZ),
		LA("la", "Lao People's Democratic Republic", FlagCoord.LA, "lo", "Lao", FlagCoord.LA),
		LB("lb", "Lebanon", FlagCoord.LB, null/* "ar" */, null, null),
		LC("lc", "Saint Lucia", FlagCoord.LC, null/* "en" */, null, null),
		LI("li", "Liechtenstein", FlagCoord.LI, null/* "de" */, null, null),
		LK("lk", "Sri Lanka", FlagCoord.LK, "si", "Sinhala, Sinhalese", FlagCoord.LK),
		LR("lr", "Liberia", FlagCoord.LR, null/* "en" */, null, null),
		LS("ls", "Lesotho", FlagCoord.LS, null/* "en" */, null, null),
		LT("lt", "Lithuania", FlagCoord.LT, "lt", "Lithuanian", FlagCoord.LT),
		LU("lu", "Luxembourg", FlagCoord.LU, "lb", "Luxembourgish, Letzeburgesch", FlagCoord.LU),
		LV("lv", "Latvia", FlagCoord.LV, "lv", "Latvian", FlagCoord.LV),
		LY("ly", "Libya", FlagCoord.LY, null/* "ar" */, null, null),
		MA("ma", "Morocco", FlagCoord.MA, null/* "ar" */, null, null),
		MC("mc", "Monaco", FlagCoord.MC, null/* "fr" */, null, null),
		MD("md", "Moldova (Republic of)", FlagCoord.MD, null/*"ro"*/, null, FlagCoord.MD),
		ME("me", "Montenegro", FlagCoord.ME, "sr", "Serbian", FlagCoord.ME),
		MG("mg", "Madagascar", FlagCoord.MG, null/* "fr" */, null, null),
		MH("mh", "Marshall Islands", FlagCoord.MH, "mh", "Marshallese", FlagCoord.MH),
		MK("mk", "Macedonia (the former Yugoslav Republic of)", FlagCoord.MK, "mk", "Macedonian", FlagCoord.MK),
		ML("ml", "Mali", FlagCoord.ML, null/* "fr" */, null, null),
		MM("mm", "Myanmar", FlagCoord.MM, "my", "Burmese", FlagCoord.MM),
		MN("mn", "Mongolia", FlagCoord.MN, "mn", "Mongolian", FlagCoord.MN),
		MO("mo", "Macao", FlagCoord.MO, null/* "zh" */, null, null),
		MQ("mq", "Martinique", FlagCoord.MQ, null/* "fr" */, null, null),
		MR("mr", "Mauritania", FlagCoord.MR, null/* "ar" */, null, null),
		MS("ms", "Montserrat", FlagCoord.MS, null/* "en" */, null, null),
		MT("mt", "Malta", FlagCoord.MT, "mt", "Maltese", FlagCoord.MT),
		MU("mu", "Mauritius", FlagCoord.MU, null/* "en" */, null, null),
		MV("mv", "Maldives", FlagCoord.MV, "dv", "Divehi, Dhivehi, Maldivian", FlagCoord.MV),
		MW("mw", "Malawi", FlagCoord.MW, "ny", "Chichewa, Chewa, Nyanja", FlagCoord.MW),
		MX("mx", "Mexico", FlagCoord.MX, null/* "es" */, null, null),
		MY("my", "Malaysia", FlagCoord.MY, "ms", "Malay", FlagCoord.MY),
		MZ("mz", "Mozambique", FlagCoord.MZ, null/* "pt" */, null, null),
		NA("na", "Namibia", FlagCoord.NA, null/* "en" */, null, null),
		NC("nc", "New Caledonia", FlagCoord.NC, null/* "fr" */, null, null),
		NE("ne", "Niger", FlagCoord.NE, null/* "fr" */, null, null),
		NG("ng", "Nigeria", FlagCoord.NG, null/* "en" */, null, null),
		NI("ni", "Nicaragua", FlagCoord.NI, null/* "es" */, null, null),
		NL("nl", "Netherlands", FlagCoord.NL, "nl", "Dutch", FlagCoord.NL),
		NO("no", "Norway", FlagCoord.NO, "no", "Norwegian", FlagCoord.NO),
		NP("np", "Nepal", FlagCoord.NP, "ne", "Nepali", FlagCoord.NP),
		NR("nr", "Nauru", FlagCoord.NR, "na", "Nauru", FlagCoord.NR),
		NZ("nz", "New Zealand", FlagCoord.NZ, null/* "en" */, null, null),
		OM("om", "Oman", FlagCoord.OM, null/* "ar" */, null, null),
		PA("pa", "Panama", FlagCoord.PA, null/* "es" */, null, null),
		PE("pe", "Peru", FlagCoord.PE, null/* "es" */, null, null),
		PF("pf", "French Polynesia", FlagCoord.PF, null/* "fr" */, null, null),
		PG("pg", "Papua New Guinea", FlagCoord.PG, null/* "en" */, null, null),
		PH("ph", "Philippines", FlagCoord.PH, "tl", "Tagalog", FlagCoord.PH),
		PK("pk", "Pakistan", FlagCoord.PK, "ur", "Urdu", FlagCoord.PK),
		PL("pl", "Poland", FlagCoord.PL, "pl", "Polish", FlagCoord.PL),
		PR("pr", "Puerto Rico", FlagCoord.PR, null/* "en" */, null, null),
		PS("ps", "Palestine, State of", FlagCoord.PS, null/* "ar" */, null, null),
		PT("pt", "Portugal", FlagCoord.PT, "pt", "Portuguese", FlagCoord.PT),
		PW("pw", "Palau", FlagCoord.PW, "pau", null, FlagCoord.PW),
		PY("py", "Paraguay", FlagCoord.PY, null/* "es" */, null, null),
		QA("qa", "Qatar", FlagCoord.QA, null/* "ar" */, null, null),
		RE("re", "RÃ©union", FlagCoord.RE, null/* "fr" */, null, null),
		RO("ro", "Romania", FlagCoord.RO, "ro", "Romanian", FlagCoord.RO),
		RS("rs", "Serbia", FlagCoord.RS, "sr", "Serbian", FlagCoord.RS),
		RU("ru", "Russian Federation", FlagCoord.RU, "ru", "Russian", FlagCoord.RU),
		RW("rw", "Rwanda", FlagCoord.RW, "rw", "Kinyarwanda", FlagCoord.RW),
		SA("sa", "Saudi Arabia", FlagCoord.SA, null/* "ar" */, null, null),
		SB("sb", "Solomon Islands", FlagCoord.SB, null/* "en" */, null, null),
		SC("sc", "Seychelles", FlagCoord.SC, null/* "en" */, null, null),
		SD("sd", "Sudan", FlagCoord.SD, null/* "ar" */, null, null),
		SE("se", "Sweden", FlagCoord.SE, "sv", "Swedish", FlagCoord.SE),
		SG("sg", "Singapore", FlagCoord.SG, "cmn", "Mandarin Chinese", FlagCoord.SG),
		SI("si", "Slovenia", FlagCoord.SI, "sl", "Slovene", FlagCoord.SI),
		SK("sk", "Slovakia", FlagCoord.SK, "sk", "Slovak", FlagCoord.SK),
		SL("sl", "Sierra Leone", FlagCoord.SL, null/* "en" */, null, null),
		SM("sm", "San Marino", FlagCoord.SM, null/* "it" */, null, null),
		SN("sn", "Senegal", FlagCoord.SN, null/* "fr" */, null, null),
		SO("so", "Somalia", FlagCoord.SO, "so", "Somali", FlagCoord.SO),
		SR("sr", "Suriname", FlagCoord.SR, null/* "nl" */, null, null),
		ST("st", "Sao Tome and Principe", FlagCoord.ST, null/* "pt" */, null, null),
		SV("sv", "El Salvador", FlagCoord.SV, null/* "es" */, null, null),
		SY("sy", "Syrian Arab Republic", FlagCoord.SY, null/* "ar" */, null, null),
		SZ("sz", "Swaziland", FlagCoord.SZ, null/* "en" */, null, null),
		TC("tc", "Turks and Caicos Islands", FlagCoord.TC, null/* "en" */, null, null),
		TD("td", "Chad", FlagCoord.TD, null/* "fr" */, null, null),
		TG("tg", "Togo", FlagCoord.TG, null/* "fr" */, null, null),
		TH("th", "Thailand", FlagCoord.TH, "th", "Thai", FlagCoord.TH),
		TJ("tj", "Tajikistan", FlagCoord.TJ, "tg", "Tajik", FlagCoord.TJ),
		TL("tl", "Timor-Leste", FlagCoord.TL, "tet", "Tetum", FlagCoord.TL),
		TM("tm", "Turkmenistan", FlagCoord.TM, "tk", "Turkmen", FlagCoord.TM),
		TN("tn", "Tunisia", FlagCoord.TN, null/* "ar" */, null, null),
		TO("to", "Tonga", FlagCoord.TO, "to", "Tonga (Tonga Islands)", FlagCoord.TO),
		TR("tr", "Turkey", FlagCoord.TR, "tr", "Turkish", FlagCoord.TR),
		TT("tt", "Trinidad and Tobago", FlagCoord.TT, null/* "en" */, null, null),
		TV("tv", "Tuvalu", FlagCoord.TV, "tvl", "Tuvaluan", FlagCoord.TV),
		TW("tw", "Taiwan, Province of China", FlagCoord.TW, null/* "zh" */, null, null),
		TZ("tz", "Tanzania, United Republic of", FlagCoord.TZ, "sw", "Swahili", FlagCoord.TZ),
		UA("ua", "Ukraine", FlagCoord.UA, "uk", "Ukrainian", FlagCoord.UA),
		UG("ug", "Uganda", FlagCoord.UG, null/* "en" */, null, null),
		US("us", "United States of America", FlagCoord.US, null/* "en" */, null, null),
		UY("uy", "Uruguay", FlagCoord.UY, null/* es */, null, null),
		UZ("uz", "Uzbekistan", FlagCoord.UZ, "uz", "Uzbek", FlagCoord.UZ),
		VA("va", "Holy See", FlagCoord.VA, "la", "Latin", FlagCoord.VA),
		VC("vc", "Saint Vincent and the Grenadines", FlagCoord.VC, null/* "en" */, null, null),
		VE("ve", "Venezuela (Bolivarian Republic of)", FlagCoord.VE, null/* "es" */, null, null),
		VG("vg", "Virgin Islands (British)", FlagCoord.VG, null/* "en" */, null, null),
		VI("vi", "Virgin Islands (U.S.)", FlagCoord.VI, null/* "en" */, null, null),
		VN("vn", "Viet Nam", FlagCoord.VN, "vi", "Vietnamese", FlagCoord.VN),
		VU("vu", "Vanuatu", FlagCoord.VU, "bi", "Bislama", FlagCoord.VU),
		WS("ws", "Samoa", FlagCoord.WS, "sm", "Samoan", FlagCoord.WS),
		YE("ye", "Yemen", FlagCoord.YE, null/* "ar" */, null, null),
		ZA("za", "South Africa", FlagCoord.ZA, "zu", "Zulu", FlagCoord.ZA),
		ZM("zm", "Zambia", FlagCoord.ZM, null/* "en" */, null, null),
		ZW("zw", "Zimbabwe", FlagCoord.ZW, null/* "en" */, null, null);

		private final String countryCode;
		private final String country;
		private final FlagCoord countryFlag;
		private final String languageCode;
		private final String language;
		private final FlagCoord languageFlag;

		private LanguageCountryData(String countryCode, String country, FlagCoord countryFlag,
									String languageCode, String language, FlagCoord languageFlag) {
			this.countryCode = countryCode;
			this.country = country;
			this.countryFlag = countryFlag;
			this.languageCode = languageCode;
			this.language = language;
			this.languageFlag = languageFlag;
		}

	}

	private static Map<String, EnhancedLocale> byCountry;
	private static Map<String, EnhancedLocale> byLanguage;

	public static void init() throws Exception {
		BufferedImage flags = ImageIO.read(EnhancedLocaleMap.class.getResource("/images/flags.png"));
		EnumMap<FlagCoord, ImageIcon> flagMap = new EnumMap<>(FlagCoord.class);
		for (FlagCoord flagCoord : FlagCoord.values()) {
			flagMap.put(flagCoord, new ImageIcon(flags.getSubimage(flagCoord.x, flagCoord.y, 32, 24)));
		}

		if (byCountry == null) {
			byCountry = new HashMap<>();
		}
		if (byLanguage == null) {
			byLanguage = new HashMap<>();
		}

		byCountry.clear();
		byLanguage.clear();

		for (LanguageCountryData data : LanguageCountryData.values()) {
			EnhancedLocale enhancedLocale = new EnhancedLocale(data.countryCode, data.country, flagMap.get(data.countryFlag),
															   data.languageCode, data.language, flagMap.get(data.languageFlag));
			byCountry.put(data.countryCode, enhancedLocale);
			byLanguage.put(data.languageCode, enhancedLocale);
		}
	}

	public static EnhancedLocale getByCountry(String country) {
		return byCountry.get(country.toLowerCase());
	}

	public static EnhancedLocale getByLanguage(String language) {
		return byLanguage.get(language.toLowerCase());
	}

	private EnhancedLocaleMap() {
	}

}
